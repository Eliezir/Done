/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OnboardingRouteImport } from './routes/onboarding/route'
import { Route as IndexImport } from './routes/index'
import { Route as AppIndexImport } from './routes/app/index'
import { Route as OnboardingWelcomeImport } from './routes/onboarding/welcome'
import { Route as OnboardingPreferencesImport } from './routes/onboarding/preferences'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthForgotPasswordImport } from './routes/auth/forgot-password'
import { Route as AuthlayoutImport } from './routes/auth/__layout'
import { Route as ApplayoutImport } from './routes/app/__layout'

// Create Virtual Routes

const AuthImport = createFileRoute('/auth')()
const AppImport = createFileRoute('/app')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingRouteRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const OnboardingWelcomeRoute = OnboardingWelcomeImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => OnboardingRouteRoute,
} as any)

const OnboardingPreferencesRoute = OnboardingPreferencesImport.update({
  id: '/preferences',
  path: '/preferences',
  getParentRoute: () => OnboardingRouteRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)

const AuthlayoutRoute = AuthlayoutImport.update({
  id: '/__layout',
  getParentRoute: () => AuthRoute,
} as any)

const ApplayoutRoute = ApplayoutImport.update({
  id: '/__layout',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/app/__layout': {
      id: '/app/__layout'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof ApplayoutImport
      parentRoute: typeof AppRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/__layout': {
      id: '/auth/__layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthlayoutImport
      parentRoute: typeof AuthRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof AuthImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/onboarding/preferences': {
      id: '/onboarding/preferences'
      path: '/preferences'
      fullPath: '/onboarding/preferences'
      preLoaderRoute: typeof OnboardingPreferencesImport
      parentRoute: typeof OnboardingRouteImport
    }
    '/onboarding/welcome': {
      id: '/onboarding/welcome'
      path: '/welcome'
      fullPath: '/onboarding/welcome'
      preLoaderRoute: typeof OnboardingWelcomeImport
      parentRoute: typeof OnboardingRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface OnboardingRouteRouteChildren {
  OnboardingPreferencesRoute: typeof OnboardingPreferencesRoute
  OnboardingWelcomeRoute: typeof OnboardingWelcomeRoute
}

const OnboardingRouteRouteChildren: OnboardingRouteRouteChildren = {
  OnboardingPreferencesRoute: OnboardingPreferencesRoute,
  OnboardingWelcomeRoute: OnboardingWelcomeRoute,
}

const OnboardingRouteRouteWithChildren = OnboardingRouteRoute._addFileChildren(
  OnboardingRouteRouteChildren,
)

interface AppRouteChildren {
  ApplayoutRoute: typeof ApplayoutRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  ApplayoutRoute: ApplayoutRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthlayoutRoute: typeof AuthlayoutRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthlayoutRoute: AuthlayoutRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/app': typeof ApplayoutRoute
  '/auth': typeof AuthlayoutRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/onboarding/preferences': typeof OnboardingPreferencesRoute
  '/onboarding/welcome': typeof OnboardingWelcomeRoute
  '/app/': typeof AppIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/app': typeof AppIndexRoute
  '/auth': typeof AuthlayoutRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/onboarding/preferences': typeof OnboardingPreferencesRoute
  '/onboarding/welcome': typeof OnboardingWelcomeRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/app': typeof AppRouteWithChildren
  '/app/__layout': typeof ApplayoutRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/__layout': typeof AuthlayoutRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/onboarding/preferences': typeof OnboardingPreferencesRoute
  '/onboarding/welcome': typeof OnboardingWelcomeRoute
  '/app/': typeof AppIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/onboarding'
    | '/app'
    | '/auth'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/onboarding/preferences'
    | '/onboarding/welcome'
    | '/app/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/onboarding'
    | '/app'
    | '/auth'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/onboarding/preferences'
    | '/onboarding/welcome'
  id:
    | '__root__'
    | '/'
    | '/onboarding'
    | '/app'
    | '/app/__layout'
    | '/auth'
    | '/auth/__layout'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/onboarding/preferences'
    | '/onboarding/welcome'
    | '/app/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OnboardingRouteRoute: typeof OnboardingRouteRouteWithChildren
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OnboardingRouteRoute: OnboardingRouteRouteWithChildren,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/onboarding",
        "/app",
        "/auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/onboarding": {
      "filePath": "onboarding/route.tsx",
      "children": [
        "/onboarding/preferences",
        "/onboarding/welcome"
      ]
    },
    "/app": {
      "filePath": "app",
      "children": [
        "/app/__layout",
        "/app/"
      ]
    },
    "/app/__layout": {
      "filePath": "app/__layout.tsx",
      "parent": "/app"
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/__layout",
        "/auth/forgot-password",
        "/auth/login",
        "/auth/register"
      ]
    },
    "/auth/__layout": {
      "filePath": "auth/__layout.tsx",
      "parent": "/auth"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.tsx",
      "parent": "/auth"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx",
      "parent": "/auth"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx",
      "parent": "/auth"
    },
    "/onboarding/preferences": {
      "filePath": "onboarding/preferences.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/welcome": {
      "filePath": "onboarding/welcome.tsx",
      "parent": "/onboarding"
    },
    "/app/": {
      "filePath": "app/index.tsx",
      "parent": "/app"
    }
  }
}
ROUTE_MANIFEST_END */
